include(CMakeFindDependencyMacro)

string(TOUPPER @PROJECT_NAME@ QPBO)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/modules")

# Allow static or shared lib to be used.
# If both are installed, choose based on BUILD_SHARED_LIBS.
if (BUILD_SHARED_LIBS)
   if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")
      include(${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake)
   elseif(EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-static-targets.cmake")
      include(${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-static-targets.cmake)
   else()
      SET(NOT_FOUND TRUE)
   endif()
else()
   if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-static-targets.cmake")
      include(${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-static-targets.cmake)
   elseif(EXISTS "${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")
      include(${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake)
   else()
      SET(NOT_FOUND TRUE)
   endif()
endif()

if(NOT_FOUND)
   message(SEND_ERROR "No required target file was found for build with shared mode set to ${BUILD_SHARED_LIBS}")
endif()

SET(@PROJECT_NAME@_FOUND TRUE)
SET(@PROJECT_NAME@_VERSION @QPBO_VERSION_STRING@)
SET(@PROJECT_NAME@_C_FLAGS "-I/usr/include/@PROJECT_NAME@")
SET(@PROJECT_NAME@_CXX_FLAGS "-I/usr/include/@PROJECT_NAME@")
SET(@PROJECT_NAME@_LD_FLAGS "-l@PROJECT_NAME@")

SET(${QPBO}_FOUND @PROJECT_NAME@_FOUND)
SET(${QPBO}_VERSION @PROJECT_NAME@_VERSION)
SET(${QPBO}_C_FLAGS @PROJECT_NAME@_C_FLAGS)
SET(${QPBO}_CXX_FLAGS @PROJECT_NAME@_CXX_FLAGS)
SET(${QPBO}_LD_FLAGS @PROJECT_NAME@_LD_FLAGS)

message(STATUS "Found @PROJECT_NAME@ / ${QPBO}: ${@PROJECT_NAME@_FOUND} (found version ${@PROJECT_NAME@_VERSION})")
message(STATUS "Found @PROJECT_NAME@_C / ${QPBO}_C: ${@PROJECT_NAME@_C_FLAGS}")
message(STATUS "Found @PROJECT_NAME@_CXX / ${QPBO}_CXX: ${@PROJECT_NAME@_CXX_FLAGS}")
message(STATUS "Found @PROJECT_NAME@_LD / ${QPBO}_LD: ${@PROJECT_NAME@_LD_FLAGS}")
